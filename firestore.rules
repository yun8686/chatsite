// Deny read/write access to all users under any conditions
service cloud.firestore {
	function isAuth(uid){
  	return uid != null;
  }
  match /databases/{database}/documents {
    function isMember(database, roomid, uid){
      return exists(/databases/$(database)/documents/chats/$(roomid)/members/$(uid));
    }
		match /chats/{roomid} { // チャットルーム
    	allow read;
    	allow create;
      match /messages/{document=**} { // メッセージはメンバーのみ
        allow read; 	// : if isMember(database, roomid, request.auth.uid);
        allow write: if
        	isMember(database, roomid, request.auth.uid)
        && request.resource.data.author != ""
        && request.resource.data.message != ""
        ;
      }
      match /members/{document=**} {  // メンバーの参照はメンバーのみ可能
        allow read; //: if isMember(database, roomid, request.auth.uid);
        allow write;	//: if isMember(database, roomid, request.auth.uid);
      }

    }

    function isManager(manageResource,uid){
      return manageResource.data.creator_uid == uid;
    }
		match /manages/{roomid} { // 管理者情報
    	allow create: if isAuth(request.auth.uid);
      allow read: if isManager(resource, request.auth.uid);
    }
		match /chat_options/{roomid} { // 部屋オプション
    	allow create: if isAuth(request.auth.uid);
      allow read: if isManager(get(/databases/$(database)/documents/manages/$(roomid)), request.auth.uid);
    }
  }
}
